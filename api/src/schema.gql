# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum AccountType {
  KAKAO
  LOCAL
}

type ArticleDetailOutputDto {
  article: Articles
  error: String
  ok: Boolean!
}

type Articles {
  category: Categories!
  createdAt: DateTime!
  discord: String!
  explanation: String!
  homepage: String!
  host: String!
  id: Float!
  name: String!
  tags: [Tags!]
  thumbnail: String!
  updatedAt: DateTime!
}

type Categories {
  articles: [Articles!]!
  createdAt: DateTime!
  id: Float!
  name: String!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MCStatus {
  description: String!
  favicon: String!
  host: String!
  maxPlayers: Float!
  onlinePlayers: Float!
  port: Float!
  protocolVersion: Float!
  version: String!
}

type Mutation {
  confirmCertifyEmailCode: Boolean!
  deleteArticle(id: Float!): Boolean!
  newAccount(email: String!, nickname: String!, password: String!, username: String!): Users!
  newArticle(category: Float!, discord: String!, explanation: String!, homepage: String!, name: String!, tags: [String!], thumbnail: String!): Articles!
  requestCertifyEmail: Boolean!
  updateArticle(category: Float, discord: String, explanation: String, homepage: String, id: Float!, name: String, tags: [String!], thumbnail: String): Articles!
}

type Query {
  article(id: Float!): ArticleDetailOutputDto!
  articles(limit: Float!, offset: Float!): [Articles!]!
  login(password: String!, username: String!): String!
  me: Users!
  serverArticle(id: Float!): ServerArticleDetailOutputDto!
  tagArticles(tag: String!): [Articles!]!
}

type ServerArticleDetailOutputDto {
  article: Articles
  error: String
  ok: Boolean!
  status: MCStatus
}

type Tags {
  articles: [Articles!]!
  createdAt: DateTime!
  id: Float!
  name: String!
  updatedAt: DateTime!
}

enum UserRole {
  ADMIN
  USER
}

type Users {
  accountType: AccountType!
  certifyEmail: Boolean!
  createdAt: DateTime!
  email: String!
  id: Float!
  nickname: String!
  password: String!
  role: UserRole!
  updatedAt: DateTime!
  username: String!
}
